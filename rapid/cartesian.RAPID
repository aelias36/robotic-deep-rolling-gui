MODULE EGM_cartesian
    
    VAR egmident egmID1;
    VAR egmstate egmSt1;
    
    
    CONST egm_minmax egm_minmax_lin:=[-0.1,0.1];
    CONST egm_minmax egm_minmax_rot:=[-0.1,0.2];
    
    CONST jointtarget p20:=[[0, 0, 0, 0, 90, 0],[9E9,9E9,9E9,9E9,9E9,9E9]];
    
    CONST pose posecor:=[[0,0,0], [1,0,0,0]];
    CONST pose posesens:=[[0,0,0], [1,0,0,0]];

    PROC main()
        EGMReset egmID1;
        EGMGetId egmID1;     
        EGMStop egmID1, EGM_STOP_HOLD, \RampOutTime := 100;
        MoveAbsJ p20,v200,fine,\Inpos:=inpos100,tool0;
        WaitTime 1;
        testuc_UDP; 
    ENDPROC
     
    PROC testuc_UDP()
        EGMReset egmID1;
        EGMGetId egmID1;
        egmSt1 := EGMGetState(egmID1);        
        
        IF egmSt1 <= EGM_STATE_CONNECTED THEN
            ! Config -> Communication -> Transmission Protocol:
            !   Set up name: EGMSensor, Type: UDPUC, Port: 6510
            ! Config -> Motion -> External Motion Interface Data:
            !   Set up name: high_gain, Level: raw, Postition gain: 20, 
            EGMSetupUC ROB_1, egmID1, "high_gain", "EGMSensor:" \Pose \CommTimeout:=100;
        ENDIF

        runEGM;
              
        IF egmSt1 = EGM_STATE_CONNECTED THEN
            TPWrite "Reset EGM instance egmID1";
            EGMReset egmID1; 
        ENDIF  
    ENDPROC
              
    PROC runEGM()
        EGMActPose egmID1 \Tool:=tool0 \WObj:=wobj0, posecor,
           EGM_FRAME_BASE, posesens, EGM_FRAME_BASE \x:=egm_minmax_lin
           \y:=egm_minmax_lin \z:=egm_minmax_lin \rx:=egm_minmax_rot
            \ry:=egm_minmax_rot \rz:=egm_minmax_rot \LpFilter:=100
            \Samplerate:=4, \MaxPosDeviation:=1000 \MaxSpeedDeviation:=1000;

        EGMRunPose egmID1, EGM_STOP_HOLD \x \y \z \rx \ry \rz \CondTime:=2000000
        \RampInTime:=0.05;

        egmSt1:=EGMGetState(egmID1);
    ERROR
    
        IF ERRNO = ERR_UDPUC_COMM THEN
            TPWrite "EGM UDP Command Timeout, Restarting!";
            WaitTime 5;
            ExitCycle;
        ENDIF
    ENDPROC
    
ENDMODULE